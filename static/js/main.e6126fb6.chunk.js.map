{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","toLowerCase","includes","length","c","lassName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAceA,EAZF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACxB,OACA,yBAAKC,UAAU,wDACX,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,6BACI,4BAAKF,GACL,2BAAIC,MCgBDK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,6BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACA,kBAAC,EAAD,CACIC,IAAKD,EACLR,GAAIK,EAAOG,GAAGR,GACdF,KAAOO,EAAOG,GAAGV,KACjBC,MAAOM,EAAOG,GAAGT,aCEtBW,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,yBAAKX,UAAU,QACX,2BACAA,UAAU,oCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCgBPI,G,wDAtBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAO,CACRC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAKlC,WACI,OAAIG,KAAKJ,MAAMC,SACJ,wDAEJG,KAAKL,MAAMO,a,GAlBKC,cCSZC,EARA,SAACT,GACZ,OACI,yBAAKU,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,UAChEb,EAAMO,WC4CJO,E,kDAzCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKV,SAAS,CAACZ,YAAasB,EAAMC,OAAOC,SAbzC,EAAKjB,MAAQ,CACTb,OAAQ,GACRM,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKjB,SAAS,CAAElB,OAAQmC,S,oBAQ3C,WAAW,IAAD,OACAC,EAAenB,KAAKJ,MAAMb,OAAOqC,QAAO,SAAArC,GAC1C,OAAOA,EAAOP,KAAK6C,cAAcC,SAAS,EAAK1B,MAAMP,YAAYgC,kBAErE,OAAiC,IAA7BrB,KAAKJ,MAAMb,OAAOwC,OACX,uCAGH,yBAAK5C,UAAU,MACX,wBAAI6C,GAAC,EAACC,SAAS,MAAf,eACA,kBAAC,EAAD,CAAWnC,aAAcU,KAAKU,iBACjC,kBAAC,EAAD,KACG,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAU3B,OAAUoC,W,GAjCtBhB,aCIHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.e6126fb6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({name, email, id }) => {\n    return(\n    <div className='tc  bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n        <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n        <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n    </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {   \n    return(\n        <div>\n            {\n            robots.map((user, i) => {\n                return  (\n                <Card\n                    key={i}\n                    id={robots[i].id}\n                    name ={robots[i].name}\n                    email={robots[i].email}\n                    />\n                );\n            })        \n            }\n        </div>\n\n\n    );\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className=\"pa2 \" > \n            <input\n            className=\"pa3 ba b- -green bg-lightest-blue\"\n            type=\"search\" \n            placeholder=\"search robots\"\n            onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox; ","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n\n    }\n\n\nrender () {\n    if (this.state.hasError) {\n        return <h1>Oooops. That is not good</h1>\n    }\n    return this.props.children\n}\n\n}\n\nexport default ErrorBoundry;","import React from \"react\";\n\n\nconst Scroll = (props) => {\n    return (\n        <div style ={{overflowY: 'scroll', border :'1px solid black', height:'800px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\"\nimport './App.css';\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport { robots } from \"../robots\";\nimport Scroll from '../components/Scroll';\n   \nclass App extends Component { \n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ robots: users}));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n       \n    }\n\n    render () {\n        const filterRobots = this.state.robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n        if (this.state.robots.length === 0) {\n            return <h1>Loading</h1>\n        } else {\n            return(\n                <div className=\"tc\">\n                    <h1 c lassName=\"f2\">RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                 <Scroll>\n                    <ErrorBoundry>\n                    <CardList robots = {filterRobots}/> \n                    </ErrorBoundry>\n                </Scroll>\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \nimport { robots } from './robots';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}